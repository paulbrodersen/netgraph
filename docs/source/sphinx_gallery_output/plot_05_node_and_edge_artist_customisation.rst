
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "sphinx_gallery_output/plot_05_node_and_edge_artist_customisation.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_sphinx_gallery_output_plot_05_node_and_edge_artist_customisation.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_sphinx_gallery_output_plot_05_node_and_edge_artist_customisation.py:


Node and Edge Artist Customisation
==================================

Node artists
------------

The shape, size, and colour of node representations can be controlled via the following parameters:

- :code:`node_shape` : node shape; one of 'so^>v<dph8'
- :code:`node_size` : node radius
- :code:`node_edge_width` : line width of node marker border
- :code:`node_color` : node face colour
- :code:`node_edge_color` : node edge colour
- :code:`node_alpha` : node transparency
- :code:`node_zorder` : node z-order; artists with higher z-order occlude artists with lower z-order

Edge artists
------------

The shape, size, and colour of edge representations can be controlled via the following parameters:

- :code:`edge_width` : edge width
- :code:`edge_color` : edge face colour
- :code:`edge_alpha` : edge transparency
- :code:`edge_zorder` : node zorder; artists with higher z-order occlude artists with lower z-order
- :code:`arrows` : boolean flag that turn the drawing of arrow heads on or off

Most node and edge artist properties can be specified in three ways:

.. GENERATED FROM PYTHON SOURCE LINES 34-35

1. Using a single scalar or string that will be applied to all artists.

.. GENERATED FROM PYTHON SOURCE LINES 35-43

.. code-block:: default


    import matplotlib.pyplot as plt
    from netgraph import Graph

    edges = [(0, 1), (1, 1)]
    Graph(edges, node_color='red', node_size=4.)
    plt.show()




.. image-sg:: /sphinx_gallery_output/images/sphx_glr_plot_05_node_and_edge_artist_customisation_001.png
   :alt: plot 05 node and edge artist customisation
   :srcset: /sphinx_gallery_output/images/sphx_glr_plot_05_node_and_edge_artist_customisation_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 44-45

2. Using a dictionary mapping individual nodes or individual edges to a property:

.. GENERATED FROM PYTHON SOURCE LINES 45-56

.. code-block:: default


    import numpy as np
    import matplotlib.pyplot as plt
    from netgraph import Graph

    Graph([(0, 1), (1, 2), (2, 0)],
          edge_color={(0, 1) : 'g', (1, 2) : 'lightblue', (2, 0) : np.array([1, 0, 0])},
          node_size={0 : 20, 1 : 4.2, 2 : np.pi},
    )
    plt.show()




.. image-sg:: /sphinx_gallery_output/images/sphx_glr_plot_05_node_and_edge_artist_customisation_002.png
   :alt: plot 05 node and edge artist customisation
   :srcset: /sphinx_gallery_output/images/sphx_glr_plot_05_node_and_edge_artist_customisation_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 57-61

3. By directly manipulating the node and edge artists.

Node and edge artists are derived from the :code:`matplotlib.patches.PathPatch` class,
such that any of its methods can be used to modify node and edge artists properties.

.. GENERATED FROM PYTHON SOURCE LINES 61-75

.. code-block:: default


    import matplotlib.pyplot as plt; plt.ion()
    from netgraph import Graph

    fig, ax = plt.subplots()
    g = Graph([(0, 1), (1, 2), (2, 0)], ax=ax)
    plt.show()

    # make some changes
    g.node_artists[0].set_alpha(0.2)
    g.edge_artists[(1, 2)].set_facecolor('red')

    # force redraw to display changes
    fig.canvas.draw()



.. image-sg:: /sphinx_gallery_output/images/sphx_glr_plot_05_node_and_edge_artist_customisation_003.png
   :alt: plot 05 node and edge artist customisation
   :srcset: /sphinx_gallery_output/images/sphx_glr_plot_05_node_and_edge_artist_customisation_003.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.816 seconds)


.. _sphx_glr_download_sphinx_gallery_output_plot_05_node_and_edge_artist_customisation.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_05_node_and_edge_artist_customisation.py <plot_05_node_and_edge_artist_customisation.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_05_node_and_edge_artist_customisation.ipynb <plot_05_node_and_edge_artist_customisation.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
